name: Linux tests

on:
  push:         {branches: [master]}
  pull_request: {branches: [master]}

jobs:
  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        imgtag:
          - "python:3.8-bullseye"
        crypto_ver:
          - "2.6"


    container: "${{matrix.imgtag}}"
    steps:
      - uses: actions/checkout@v2
      - name: Python dependencies
        run: |
          pip install -r dev-requirements.txt
          pip install cryptography==${{matrix.crypto_ver}} PyNaCl
          if [ ${{matrix.imgtag}} = python:2.7-buster ] || \
             [ ${{matrix.imgtag}} = python:3.6-buster ]; then
            export DEBIAN_FRONTEND=noninteractive
            apt-get -q -y update
            apt-get -q -y install libkrb5-dev krb5-admin-server \
                            krb5-kdc krb5-user krb5-multidev openssh-server
            pip install gssapi==1.5.1 pyasn1==0.4.5 k5test==0.9.2
          fi
          pip install -e .
          pip freeze
      - name: Lint
        run: |
          flake8 --version
          flake8 --show-source
      - name: Test
        run: |
          pytest -v

  armv64_py38_job:
      name: Build and Test for arm64 with py38
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
           docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl git && \
              ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              python3 --version && \
              uname -m && \
              whoami && \
              pwd && \
              ls && \
              pip install -r dev-requirements.txt && \
              pip install cryptography PyNaCl && \
              apt-get -q -y update && 
              apt-get -q -y install libkrb5-dev krb5-admin-server krb5-kdc krb5-user krb5-multidev openssh-server && \
              pip install gssapi==1.5.1 pyasn1==0.4.5 k5test==0.9.2 && \
              pip install -e . && \
              pip freeze && \
              pytest -v && \
              deactivate'
