name: Linux tests

on:
  push:         {branches: ["master", "2.7"]}
  pull_request: {branches: ["master", "2.7"]}

jobs:
  test:
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        imgtag:
          - "python:2.7-buster"
          - "python:3.4-stretch"
          - "python:3.5-buster"
          - "python:3.6-buster"
          - "python:3.7-buster"
          - "python:3.8-buster"
          - "pypy:2.7-7.3"
          - "pypy:3.6-7.3"
        crypto_ver:
          - "2.4.2"
          - "2.6.1"
          - "2.9.2"
          - "3.0"
        exclude:
          - imgtag: "python:2.7-buster"
            crypto_ver: "3.0"
          - imgtag: "pypy:2.7-7.3"
            crypto_ver: "3.0"
          - imgtag: "python:3.4-stretch"
            crypto_ver: "3.0"
          - imgtag: "python:3.4-stretch"
            crypto_ver: "2.9.2"

    container: "${{matrix.imgtag}}"
    steps:
      - uses: actions/checkout@v2
      - name: Python dependencies
        run: |
          pip install -r dev-requirements.txt
          pip install cryptography==${{matrix.crypto_ver}} PyNaCl
          if [ ${{matrix.imgtag}} = python:3.4-stretch ] && \
             [ ${{matrix.crypto_ver}} = 2.8            ]; then
            # cryptography-1.6 does not seem to work with other distros
            # swap it in for just this one matrix combo
            pip install cryptography==1.6
          fi
          if [ ${{matrix.imgtag}} = python:2.7-buster ] || \
             [ ${{matrix.imgtag}} = python:3.6-buster ]; then
            export DEBIAN_FRONTEND=noninteractive
            apt-get -q -y update
            apt-get -q -y install libkrb5-dev krb5-admin-server \
                            krb5-kdc krb5-user krb5-multidev openssh-server
            pip install gssapi==1.5.1 pyasn1==0.4.5 k5test==0.9.2
          fi
          pip install -e .
          pip freeze
      - name: Lint
        run: |
          flake8 --version
          flake8 --show-source
      - name: Test
        run: |
          pytest -v

  docs:
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          pip install -r doc-requirements.txt
          pip install -e .
      - name: Build docs
        run: |
          sphinx-build -W sites/docs tmpbuild
